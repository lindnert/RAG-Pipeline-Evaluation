Modulhandbuch 


Nebenfach: 
Informatik 
für 
Bachelorstudiengänge 
(60 
ECTS-Punkte) 


Auf der Basis der Prüfungs-und Studienordnung 
vom 07.10.2010 

Stand: 08.11.2012 

1 


Der 
Studiengang 


Das 60 ECTS-Nebenfach Informatik ist grundsätzlich als eigenständiger Studiengang konzipiert, 
welcher mit zahlreichen Hauptfächern kombiniert werden kann. Folgende Bachelor-Hauptfächer 
können derzeit mit dem 60 ECTS-Informatik-Nebenfach kombiniert werden: Geschichte, Kunstgeschichte,
 Musikwissenschaft, Philosophie, Prävention, Integration und Rehabilitation (PIR) bei 
Hörschädigung, Ägyptologie und Koptologie, Alter Orient, Archäologie: Europa und Vorderer 
Orient, Buddhistische und Südasiatische Studien, Ethnologie, Japanologie, Naher und Mittlerer
 Osten, Sinologie, Volkskunde/ Europäische Ethnologie, Allgemeine und Vergleichende Literaturwissenschaft,
 Anglistik, Buchwissenschaft, Computerlinguistik, Deutsch als Fremdsprache, 
Finnougristik, Germanistik, Griechische Philologie, Griechische Studien, Italianistik, Latinistik, 
Nordamerikastudien, Phonetik und Sprachverarbeitung, Romanistik, Skandinavistik, Slavistik. 

Ziel des Nebenfachstudiums Informatik ist es, Absolventinnen und Absolventen mit unterschiedlichstem
 Hauptfachstudiumshintergrund auch für Tätigkeiten zu qualifizieren, die fundiertere
 Kenntnisse aus dem IT-Bereich erfordern – dies ist z.B. in Berufsfeldern, in denen Linguistinnen
 und Linguisten oftmals tätig sind, häufig eine zentrale Anforderung. Wenn man das 60 
ECTS-Nebenfach Informatik mit dem Hauptfachangebot im Bachelorstudiengang Informatik vergleicht,
 dann umfasst das Nebenfach ungefähr die Hälfte des Informatikangebots im Studiengang 
Bachelor Informatik 180 ECTS(von den 180 ECTS-Punkten im Hauptfach werden 30 ECTS-
Punkte für das Nebenfach und ca. 30 ECTS–Punkte für den Mathematikanteil verwendet, so 
dass ca. 120 ECTS-Punkte für reine Informatikinhalte übrig bleiben). Im Nebenfach Informatik 
sind im Wesentlichen die theoretischen Informatikthemen, für deren Behandlung intensivere mathematische
 Kenntnisse notwendig sind, nicht Bestandteil des Studiums: Das Nebenfachangebot 
konzentriert sich dagegen auf die verstärkt praxisorientierten Aspekte der Informatik. 

Das Nebenfach Informatik soll die Studierenden insbesondere hinsichtlich zweier Aspekte qualifizieren:
 

• 
Da viele berufliche Tätigkeiten, die von Absolventinnen und Absolventen verschiedener 
Hauptfächer gewählt werden, heutzutage oftmals einer IT-Unterstützung bedürfen, sollen 
die Absolventinnen und Absolventen durch ihr Nebenfachstudium der Informatik in die 
Lage versetzt werden, die Brücke zwischen Hauptfach und der IT-Abteilung zu bilden, 
oder gar die IT-Tätigkeiten für das Hauptfach selbst zu übernehmen. 
• 
Absolventinnen und Absolventen, die ihre beruflichen Perspektiven über eine Qualifikation 
im gewählten Hauptfach hinaus durch einen umfassenden Kompetenzerwerb im Nebenfach 
erweitert haben, sollen die erforderlichen Kenntnisse und Fähigkeiten erworben haben, um 
im IT-Sektor berufliche Entwicklungschancen ergreifen zu können. 
Neben der Befähigung zur Übernahme einer qualifizierten Erwerbstätigkeit integriert das Nebenfachangebot
 der Informatik ein weiteres zentrales überfachliches Qualifikationsziel: Die Nebenfachstudierenden
 nehmen ebenso wie die Hauptfachstudierenden der Informatik im 3. Semester
 an einem umfangreichen Softwareentwicklungspraktikum teil, bei dem in kleinen Teams 
ein umfangreicheres Programm entwickelt wird. Hierbei werden neben der Programmierfähigkeit 
insbesondere auch die Teamfähigkeit sowie die Fähigkeit zu effizienter Arbeitsorganisation, solidem
 Zeitmanagement und umsichtiger Dokumentation trainiert. Damit werden weitere wichtige 
überfachliche Qualifikationen geschult, die nicht nur für den beruflichen Einstieg – innerhalb und 
außerhalb der Wissenschaft – relevant sind (wichtig ist dabei oftmals die Fähigkeit, in einem interdisziplinären
 Team aus Fachleuten eines Anwendungsgebiets und IT-Spezialisten vermittelnd 
zu wirken): Die vermittelten Kompetenzen tragen zur Persönlichkeitsentwicklung der Studierenden
 bei und befähigen sie in vielerlei Hinsicht zur Übernahme von Verantwortung für andere und 
für sich selbst. 

Das Nebenfach Informatik kann im Wintersemester oder im Sommersemester begonnen werden.
 Es ist so organisiert, dass in den ersten fünf Semestern jeweils 12 ECTS-Punkte durch ein 
oder zwei Module zu erwerben sind. Dieses Modulhandbuch listet jedoch nur die Module auf, die 

2 


fester Bestandteil der Prüfungsordung sind. Zusätzlich können die Studierenden noch 12 ECTS-
Punkte aus weiteren vertiefenden Veranstaltungen aus der Kerninformatik, der Medieninformatik 
oder der Bioinformatik erwerben. Beispiele für solche Veranstaltungen sind: Formale Techniken 
in der Software-Entwicklung, Einführung in Grid-Computing, IT-Management, Virtual Reality, 
Datenbanksysteme II, Multimediaprogrammierung, Knowledge Discovery in Databases I, Entwurf 
und Implementierung paralleler Programme, Funktionale Programmierung, Protokollsicherheit, 
Algorithmische Bioinformatik I, Medientechnik, Computergrafik, Mensch-Maschine-Interaktion. 
Dazu werden eine Reihe von Praktikas angeboten: Mobile und Verteilte Systeme, Mobile Business 
Applications, Software Engineering für Fortgeschrittene. 

3 


Inhaltsverzeichnis 
Erklärungen 
5 
Modul 
P 
1: 
Einführung 
in 
die 
Programmierung 
(INF-EiP-NF) 
6 
Modul 
P 
2: 
Softwareentwicklungspraktikum 
(INF-SEP) 
8 
Modul 
WP 
1: 
Programmierung 
und 
Modellierung 
(INF-ProMo) 
10 
Modul 
WP 
2: 
Rechnerarchitektur 
(INF-RA) 
12 
Modul 
WP 
3: 
Algorithmen 
und 
Datenstrukturen 
(INF-AlDs) 
14 
Modul 
WP 
4: 
Logik 
und 
Diskrete 
Strukturen 
(INF-LDS) 
16 
Modul 
WP 
5: 
Rechnernetze 
und 
verteilte 
Systeme 
(INF-RVS) 
18 
Modul 
WP 
6: 
Formale 
Sprachen 
und 
Komplexität 
(INF-FSK) 
20 
Modul 
WP 
8: 
Softwaretechnik 
(INF-ST) 
22 
Modul 
WP 
9: 
Betriebssysteme 
(INF-BS) 
24 
Modul 
WP 
10: 
Datenbanksysteme 
I 
(INF-DBSI) 
26 
Modul 
WP 
11: 
Web-Informationssysteme 
(INF-WebInfo) 
28 
Studienpläne 
30 


14.1 Studienplan für Studienbeginn im Wintersemester . . . . . . . . . . . . . . . . . . 30 

14.2 Studienplan für Studienbeginn im Sommersemester . . . . . . . . . . . . . . . . . 31 

4 


1 
Erklärungen 


CP Credit Points, ECTS-Punkte 
ECTS European Credit Transfer and Accumulation System 
h Stunden 
SS Sommersemester 
WS Wintersemester 
SWS Semesterwochenstunden 
GOP Grundlagen-und Ortientierungsprüfung 

1. Bitte beachten Sie: Das Modulhandbuch dient einer Orientierung für Ihren Studienverlauf. 
Für verbindliche Regelungen konsultieren Sie bitte ausschließlich die Prüfungs-und Studienordnung
 in ihrer jeweils geltenden Fassung. Diese finden Sie auf www.lmu.de/studienangebot 
unter ihrem jeweiligen Studiengang. 
2. Die Beschreibung der zugeordneten Modulteile erfolgt hinsichtlich der jeweiligen Angaben 
zu ECTS-Punkten folgendem Schema: Nicht eingeklammerte ECTS-Punkte werden mit 
Bestehen der zugehörigen Modulprüfung oder Modulteilprüfung vergeben. Eingeklammerte 
ECTS-Punkte dienen lediglich der rechnerischen Zuordnung. 
3. Module, deren Kennzeichnung mit P anfängt sind Pflichtmodule. 
Module, deren Kennzeichnung mit WP anfängt sind Wahlpflichtmodule. 
4. Eine der mit GOP (Grundlagen-und Ortientierungsprüfung) gekennzeichneten Prüfungen 
muss bis zum 3. Semester bestanden sein. 
5 


2 
Modul 
P 
1: 
Einführung 
in 
die 
Programmierung 
(INF-EiP-NF) 


Zuordnung zum Studiengang: Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Zugeordnete Modulteile: 
Lehrform Veranstaltung (Pflicht) Tur-Präsenzzeit Selbst-ECTS 
nus studium 

Vorlesung P 1.1 Vorlesung zur Einführung in WS 60 h (4 SWS) 120 h (6) CP 
die Programmierung 
Übung P 1.2 Übungen zur Einführung in die WS 30 h (2 SWS) 60 h (3) CP 
Programmierung 
Tutorium P 1.3 Tutorium zur Einführung in WS 30 h (2 SWS) 60 h (3) CP 

die Programmierung 

Im Modul müssen insgesamt 12 ECTS-Punkte erworben werden. Die Präsenzzeit beträgt 8 Wochenstunden.
 Inklusive Selbststudium sind etwa 360 Stunden aufzuwenden. 

Art des Moduls Pflichtmodul mit Pflichtveranstaltungen 

Verwendbarkeit Studiengänge: 
Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 

Teilnahmevoraussetzungen
 
keine 
Zeitpunkt im 
dienverlauf 
Stu1.
 Semester (empfohlen) 
Dauer Das Modul erstreckt sich über ein Semester. 

Art der Bewertung Das Modul ist benotet. 

Form der Modul-Klausur: 90-180 min oder mündlich: 15-45 min 
prüfung Wiederholbarkeit: einmal, nächster Termin 
Zulassungsvoraussetzung: keine 
GOP (Grundlagen und Orientierungsprüfung) 

6 


Inhalte Dieses Modul gibt eine Einführung in die imperative, objektorientierte 
und nebenläufige Programmierung anhand einer höheren 
Programmiersprache. Neben Kenntnissen in der Programmierung 
werden allgemeine Grundlagen, Konzepte, Methoden und 
Techniken zur Darstellung, Strukturierung und Verarbeitung von 
Daten sowie zur Entwicklung von Algorithmen behandelt. Dabei 
wird auf begriffliche Klarheit und präzise mathematische Fundierung 
mit formalen Methoden Wert gelegt. 
Im Einzelnen werden vermittelt: 
• 
Grundbegriffe zu Programmen und ihrer Ausführung, 
• 
Syntax von Programmiersprachen und ihre Beschreibung, 
• 
Grunddatentypen und imperative Kontrollstrukturen, 
• 
Komplexität und Korrektheit imperativer Programme, 
• 
Induktion und Rekursion, 
• 
Einfache Sortierverfahren, 
• 
Einführung in den objekt-orientierten Programmentwurf, 
• 
Klassen, Schnittstellen und Pakete, 
• 
Vererbung und Ausnahmebehandlung, 
• 
Objektorientierte Realisierung von Listen-und Baumstrukturen, 
• 
Grundkonzepte der nebenläufigen Programmierung: 
Threads, Synchronisation und Verklemmung. 
Das Modul besteht aus einer Vorlesung sowie Übungen in kleinen 
Gruppen. Die in der Vorlesung besprochenen Inhalte werden im 
Übungsteil anhand von praktischen Anwendungen eingeübt. Das 
Tutorium dient zur Wiederholung des Stoffes und zur Klärung noch 
offener Fragen. 
Qualifikationsziele Die Studierenden werden in die Lage versetzt, Lösungen für kleinere 
und überschaubare Probleme algorithmisch umzusetzen und 
mit einer höheren Programmiersprache als ausführbare Programme 
zu realisieren. Des weiteren entwickeln die Studierenden ein 
Verständnis für die allgemeinen Prinzipien der Programmierung 
und der Programmiersprachen, das den Grundstein dafür legt, dass 
die Studierenden sich (nach weiteren Erfahrungen im Laufe des 
Studiums) in beliebige Programmiersprachen schnell und präzise 
einarbeiten können. 
Modulverantwortliche/
r 
Ludwig-Maximilians-Universität 
Institut für Informatik 
Kerninformatik 
Martin Wirsing 
Unterrichtssprache(
n) 
Deutsch 

7 


3 
Modul 
P 
2: 
Softwareentwicklungspraktikum 
(INF-SEP) 


Zuordnung zum Studiengang: Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Zugeordnete Modulteile: 
Lehrform Veranstaltung (Pflicht) Tur-Präsenzzeit Selbst-ECTS 
nus studium 

Tutorium P 2.1 Softwareentwicklungsprakti-WS 30 h (2 SWS) 60 h (3) CP 
kum -Plenum 

Praktikum P 2.2 Softwareentwicklungsprakti-WS 135 h (9 SWS) 135 h (9) CP 
kum -Praxis 

Im Modul müssen insgesamt 12 ECTS-Punkte erworben werden. Die Präsenzzeit beträgt 11 
Wochenstunden. Inklusive Selbststudium sind etwa 360 Stunden aufzuwenden. 

Art des Moduls Pflichtmodul mit Pflichtveranstaltungen 

Verwendbarkeit Studiengänge: 
Bachelorstudiengang Informatik (150 CP) 
Bachelorstudiengang Informatik plus Computerlinguistik (180 CP) 
Bachelorstudiengang Informatik plus Mathematik (180 CP) 
Bachelorstudiengang Informatik plus Statistik (180 CP) 
Bachelorstudiengang Medieninformatik (180 CP) 
Lehramt Gymnasium (72 CP) 
Lehramt Realschule (72 CP) 
Medieninformatik als Nebenfach für Bachelor und Masterstudiengänge
 (60 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 

Teilnahmevoraussetzungen
 
keine 
Zeitpunkt im 
dienverlauf 
Stu3.
 Semester (empfohlen) 
Dauer Das Modul erstreckt sich über ein Semester. 

Art der Bewertung Das Modul ist benotet. 

Form der Modul-mündlich: 15-45 min 
prüfung Wiederholbarkeit: beliebig 
Zulassungsvoraussetzung: keine 

8 


Inhalte Das Praktikum besteht aus einer Einführungsphase, in der grundlegende 
Programmiertechniken, die für die spätere Arbeit benötigt 
werden, eingeführt werden. Danach wird eine komplexe Softwareentwicklungsaufgabe 
in Teams von drei bis sechs Studierenden 
bearbeitet. Schwerpunkte des Praktikums liegen in der Erfahrung 
einer teamorientierten Softwareentwicklung unter Benutzung 
marktüblicher Werkzeuge und Methoden. 
Die praktische Arbeit wird begleitet von einem Plenum, in dem auf 
die für das Praktikum erforderlichen Softwareentwicklungstechniken 
eingegangen wird. Dies umfasst typischerweise Programmieren 
mit Programmbibliotheken, Grafik-Programmierung, Aspekte 
der objektorientierte Analyse, Einführung in die Client-Server Programmierung 
und Verwendung von Software-Management-Tools. 
Außerdem werden auftretende aktuelle Probleme, Fragen und 
Schwierigkeiten bei der Software-Entwicklung diskutiert. 
Die Studierenden arbeiten weitgehend selbständig in kleinen 
Teams. Jedem Team ist ein Betreuer zugeordnet, der dem Team 
bei den anstehenden Aufgaben hilft. 
Qualifikationsziele Das Softwareentwicklungspraktikum vermittelt praktische Erfahrung 
in der teamorientierten Entwicklung eines größeren und komplexen 
Software-Systems unter Benutzung marktüblicher Werkzeuge 
und Methoden. Es soll die Fähigkeit entwickelt werden, in einem 
kleinen Team ein größeres Softwareprojekt erfolgreich durchzuführen. 
Nach erfolgreicher Teilnahme am Softwareentwicklungspraktikum 
sollen sich die Teilnehmer trauen, Werkstudentenjobs in der 
IT-Industrie anzunehmen. 
ModulverantLudwig-
Maximilians-Universität 
wortliche/r Institut für Informatik 
Kerninformatik 
Studiengangskoordinator 
Unterrichts-Deutsch 
sprache(n) 

9 


4 
Modul 
WP 
1: 
Programmierung 
und 
Modellierung 
(INF-ProMo) 


Zuordnung zum Studiengang: Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Zugeordnete Modulteile: 
Lehrform Veranstaltung (Pflicht) Tur-Präsenzzeit Selbst-ECTS 
nus studium 

Vorlesung WP 1.1 Vorlesung zur Programmie-SS 30 h (2 SWS) 30 h (2) CP 
rung und Modellierung 
Übung WP 1.2 Übungen zur Programmie-SS 45 h (3 SWS) 75 h (4) CP 

rung und Modellierung 

Im Modul müssen insgesamt 6 ECTS-Punkte erworben werden. Die Präsenzzeit beträgt 5 Wochenstunden.
 Inklusive Selbststudium sind etwa 180 Stunden aufzuwenden. 

Art des Moduls Wahlpflichtmodul mit Pflichtveranstaltungen 

Verwendbarkeit Studiengänge: 
Bachelorstudiengang Informatik (150 CP) 
Bachelorstudiengang Informatik plus Computerlinguistik (180 CP) 
Bachelorstudiengang Informatik plus Mathematik (180 CP) 
Bachelorstudiengang Informatik plus Statistik (180 CP) 
Bachelorstudiengang Medieninformatik (180 CP) 
Lehramt Gymnasium (72 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (30 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Auswahlregel: 
Aus den Wahlpflichtmodulen WP 1 -WP 4 sind zwei Wahlpflichtmodule
 zu wählen. 

Teilnahmevoraussetzungen
 
keine 
Zeitpunkt im 
dienverlauf 
Stu2.
 Semester (empfohlen) 
Dauer Das Modul erstreckt sich über ein Semester. 

Art der Bewertung Das Modul ist benotet. 

Form der Modul-Klausur: 90-180 min oder mündlich: 15-45 min 
prüfung Wiederholbarkeit: einmal, nächster Termin 
Zulassungsvoraussetzung: keine 
GOP (Grundlagen und Orientierungsprüfung) 

10 


Inhalte Dieses Modul gibt eine Einführung in Programmierkonzepte, die 
insbesondere in der funktionalen Programmierung Anwendung finden. 
Das sind unter anderem: 

• 
Auswertung funktionaler Programmen: Substitutionsmodell, 
Auswertungsreihenfolge und praktische Umsetzung in Programmiersprachen, 
• 
Funktionen zur Abstraktionsbildung, 
• 
Funktionen höherer Ordnung und Currying, 
• 
Typen und Typprüfung, 
• 
Pattern Matching, 
• 
Modulen, 
• 
Ein-und Ausgaben und imperative Aspekte der Programmierung, 
• 
funktionale und imperative Programmierung im Vergleich. 
Das Modul besteht aus einer Vorlesung mit Übungen in kleinen 
Gruppen. Die in der Vorlesung besprochenen Inhalte werden im 
Übungsteil anhand von praktischen Anwendungen eingeübt. 

Qualifikationsziele Das Modul zielt auf die Vermittlung des Folgenden: 

• 
Beherrschung von grundlegenden Konzepte der (allgemeinen 
sowie deklarativen) Programmierung. 
• 
Fähigkeit, kleine Algorithmen funktional und imperativ zu 
programmieren und Programmierlösungen der beiden Arten 
zu bewerten und vergleichen. 
• 
Vorbereitung auf die zukünftige Entwicklung von Programmiersprachen. 
ModulverantLudwig-
Maximilians-Universität 
wortliche/r Institut für Informatik 
Kerninformatik 
François Bry 
Unterrichts-Deutsch 
sprache(n) 

11 


5 
Modul 
WP 
2: 
Rechnerarchitektur 
(INF-RA) 


Zuordnung zum Studiengang: Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Zugeordnete Modulteile: 
Lehrform Veranstaltung (Pflicht) Tur-Präsenzzeit Selbst-ECTS 
nus studium 

Vorlesung WP 2.1 Vorlesung zur Rechnerarchi-SS 45 h (3 SWS) 45 h (3) CP 
tektur 
Übung WP 2.2 Übungen zur Rechnerarchi-SS 30 h (2 SWS) 60 h (3) CP 

tektur 

Im Modul müssen insgesamt 6 ECTS-Punkte erworben werden. Die Präsenzzeit beträgt 5 Wochenstunden.
 Inklusive Selbststudium sind etwa 180 Stunden aufzuwenden. 

Art des Moduls Wahlpflichtmodul mit Pflichtveranstaltungen 

Verwendbarkeit Studiengänge: 
Bachelorstudiengang Informatik (150 CP) 
Bachelorstudiengang Informatik plus Computerlinguistik (180 CP) 
Bachelorstudiengang Informatik plus Mathematik (180 CP) 
Bachelorstudiengang Informatik plus Statistik (180 CP) 
Bachelorstudiengang Medieninformatik (180 CP) 
Lehramt Gymnasium (72 CP) 
Lehramt Realschule (72 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (30 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Auswahlregel: 
Aus den Wahlpflichtmodulen WP 1 -WP 4 sind zwei Wahlpflichtmodule
 zu wählen. 

Teilnahmevoraussetzungen
 
keine 
Zeitpunkt im 
dienverlauf 
Stu2.
 Semester (empfohlen) 
Dauer Das Modul erstreckt sich über ein Semester. 

Art der Bewertung Das Modul ist benotet. 

Form der Modul-Klausur: 90-180 min oder mündlich: 15-45 min 
prüfung Wiederholbarkeit: einmal, nächster Termin 
Zulassungsvoraussetzung: keine 
GOP (Grundlagen und Orientierungsprüfung) 

12 


Inhalte Dieses Modul gibt einen Überblick über die binäre Darstellung von 
Informationen auf Computern, sowie über die Architektur und Arbeitsweise 
moderner Rechner nach von Neumann. Die klassischen 
Komponenten eines Computers werden eingeführt. Deren Interaktion 
wird zunächst theoretisch und dann mittels einer Maschinensprache 
und einer Assemblersprache praktisch behandelt. Es wird 
gezeigt, wie man mit Hilfe der Boolschen Algebra einfache Schaltungen 
und auch komplexere Komponenten eines Prozessors und 
des Speichers systematisch entwerfen und optimieren kann. 
Im Einzelnen werden behandelt: 

• 
Methoden zur binären Darstellung von Informationen im 
Rechner, 
• 
Realisierung von Speicher durch Schaltwerke sowie durch optische 
und magnetische Medien, 
• 
Boolesche Algebra zum Entwurf von Schaltungen, 
• 
Entwurf und Optimierung einfacher logischer Schaltungen in 
Prozessoren, 
• 
Komponenten der von Neumann Architektur und deren Optimierungen, 
• 
maschinennahe Assemblerprogrammierung, 
• 
das Zusammenspiel der unteren Ebenen eines Computers, 
sowie 
• 
Parallelisierung und Mehrprozessorsysteme. 
Das Modul besteht aus einer Vorlesung sowie Übungen in kleinen 
Gruppen. Die in der Vorlesung besprochenen Inhalte werden im 
Übungsteil anhand von praktischen Anwendungen eingeübt. 

Qualifikationsziele Die Studierenden entwickeln ein Grundverständnis des Entwurfs 
und der Architektur moderner Rechner und werden in den Zusammenhang 
zwischen höheren Programmiersprachen und der Abarbeitung 
einzelner Befehle auf Maschinenebene eingeführt. Insbesondere 
sollen sie ein Gefühl dafür entwickeln, welche Konsequenzen 
die Maschinenarchitektur für die Abarbeitung von Programmen 
hat, die in höheren Programmiersprachen geschrieben sind. 
Modulverantwortliche/
r 
Ludwig-Maximilians-Universität 
Institut für Informatik 
Kerninformatik 
Claudia Linnhof-Popien 
Unterrichtssprache(
n) 
Deutsch 

13 


6 
Modul 
WP 
3: 
Algorithmen 
und 
Datenstrukturen 
(INF-AlDs) 


Zuordnung zum Studiengang: Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Zugeordnete Modulteile: 
Lehrform Veranstaltung (Pflicht) Tur-Präsenzzeit Selbst-ECTS 
nus studium 

Vorlesung WP 3.1 Vorlesung zu Algorithmen SS 45 h (3 SWS) 45 h (3) CP 
und Datenstrukture 
Übung WP 3.2 Übungen zur Algorithmen SS 30 h (2 SWS) 60 h (3) CP 

und Datenstrukture 

Im Modul müssen insgesamt 6 ECTS-Punkte erworben werden. Die Präsenzzeit beträgt 5 Wochenstunden.
 Inklusive Selbststudium sind etwa 180 Stunden aufzuwenden. 

Art des Moduls Wahlpflichtmodul mit Pflichtveranstaltungen 

Verwendbarkeit Studiengänge: 
Bachelorstudiengang Informatik (150 CP) 
Bachelorstudiengang Informatik plus Computerlinguistik (180 CP) 
Bachelorstudiengang Informatik plus Mathematik (180 CP) 
Bachelorstudiengang Informatik plus Statistik (180 CP) 
Bachelorstudiengang Medieninformatik (180 CP) 
Lehramt Gymnasium (72 CP) 
Lehramt Realschule (72 CP) 
Masterstudiengang Medizinische Informatik (120 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (30 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Auswahlregel: 
Aus den Wahlpflichtmodulen WP 1 -WP 4 sind zwei Wahlpflichtmodule
 zu wählen. 

Teilnahmevoraussetzungen
 
keine 
Zeitpunkt im 
dienverlauf 
Stu2.
 Semester (empfohlen) 
Dauer Das Modul erstreckt sich über ein Semester. 

Art der Bewertung Das Modul ist benotet. 

Form der Modul-Klausur: 90-180 min oder mündlich: 15-45 min 
prüfung Wiederholbarkeit: einmal, nächster Termin 
Zulassungsvoraussetzung: keine 
GOP (Grundlagen und Orientierungsprüfung) 

14 


Inhalte Dieses Modul gibt eine Einführung in die Entwicklung effizienter 
Algorithmen sowie das Zusammenspiel zwischen Algorithmus und 
Datenstruktur. Dies geschieht zunächst für die wichtigen Bereiche 
Suchen, Sortieren und Verfahren auf Graphen. Durch die Einführung 
eines Baukastens von algorithmischen Techniken werden dann 
auch allgemeinere Probleme algorithmisch lösbar. 
Im einzelnen werden vermittelt: 
• 
Grundbegriffe zu Algorithmen und Laufzeitanalyse, 
• 
Grundlegende Datenstrukturen: Arrays, lineare Listen, 
Baumstrukturen sowie Implementierung von Datenstrukturen, 
• 
dynamische Suchverfahren: balancierte Suchbäume, z.B. 
AVL-Bäume, B-Bäume, B*-Bäume, Rot-Schwarz Bäume sowie 
dynamische Hashverfahren, 
• 
Sortierverfahren: einfache Sortierverfahren, 
Mergesort, Quicksort, Heapsort, 
anschließend 
• 
Graphalgorithmen: verschiedene Speicherdarstellungen von 
Graphen, Graphendurchläufe, darauf aufbauende Algorithmen 
für grundlegende Probleme auf Graphen, insbesondere 
Bestimmung kürzester Wege und minimaler Spannbäume, 
• 
algorithmische Methoden und Techniken: lokal-optimierende 
Berechnungen ("greedy methods"), divide-and-conquer, 
backtracking, branch-and-bound sowie dynamische Programmierung. 
Das Modul besteht aus einer Vorlesung sowie Übungen in kleinen 
Gruppen. Die in der Vorlesung besprochenen Inhalte werden im 
Übungsteil anhand von praktischen Anwendungen eingeübt. 
Qualifikationsziele Die Studierenden werden in die Lage versetzt, effiziente Algorithmen 
und adäquate Datenstrukturen für die Bereiche Suchen, Sortieren 
und Verfahren auf Graphen zu entwerfen sowie praktisch 
umzusetzen, z.B. in Java zu implementieren. Über die angesprochenen 
Bereiche hinaus sind die Studierenden in der Lage, allgemeinere 
Probleme algorithmisch zu lösen mithilfe eines Grundbaukastens 
von algorithmischen Techniken. 
Modulverantwortliche/
r 
Ludwig-Maximilians-Universität 
Institut für Informatik 
Kerninformatik 
Hans-Peter Kriegel 
Unterrichts-Deutsch 
sprache(n) 

15 


7 
Modul 
WP 
4: 
Logik 
und 
Diskrete 
Strukturen 
(INF-LDS) 


Zuordnung zum Studiengang: Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Zugeordnete Modulteile: 
Lehrform Veranstaltung (Pflicht) Tur-Präsenzzeit Selbst-ECTS 
nus studium 

Vorlesung WP 4.1 Vorlesung zur Logik und SS 45 h (3 SWS) 45 h (3) CP 
Diskrete Strukturen 
Übung WP 4.2 Übungen zu Logik und Dis-SS 30 h (2 SWS) 60 h (3) CP 
krete Strukturen 

Im Modul müssen insgesamt 6 ECTS-Punkte erworben werden. Die Präsenzzeit beträgt 5 Wochenstunden.
 Inklusive Selbststudium sind etwa 180 Stunden aufzuwenden. 

Art des Moduls Wahlpflichtmodul mit Pflichtveranstaltungen 

Verwendbarkeit Studiengänge: 
Bachelorstudiengang Informatik (150 CP) 
Bachelorstudiengang Informatik plus Computerlinguistik (180 CP) 
Bachelorstudiengang Informatik plus Mathematik (180 CP) 
Bachelorstudiengang Informatik plus Statistik (180 CP) 
Bachelorstudiengang Medieninformatik (180 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (30 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Auswahlregel: 
Aus den Wahlpflichtmodulen WP 1 -WP 4 sind zwei Wahlpflichtmodule
 zu wählen. 

Teilnahmevoraussetzungen
 
keine 
Zeitpunkt im 
dienverlauf 
Stu2.
 Semester (empfohlen) 
Dauer Das Modul erstreckt sich über ein Semester. 

Art der Bewertung Das Modul ist benotet. 

Form der Modul-Klausur: 90-180 min oder mündlich: 15-45 min 
prüfung Wiederholbarkeit: einmal, nächster Termin 
Zulassungsvoraussetzung: keine 
GOP (Grundlagen und Orientierungsprüfung) 

16 


Inhalte Das Modul vermittelt grundlegende Kenntnisse in diskreter Mathematik 
und Logik soweit diese für weiterführende Informatikmodule 
relevant sind. 
Im einzelnen werden vermittelt: 
• 
Diskrete Mathematik: modulare Arithmetik, Lösen modularer 
Gleichungen, Rekurrenzen, partielle Ordnungen, Verbände, 
endliche Gruppen und Körper 
• 
Logik: Aussagenlogik, Prädikatenlogik, Syntax, Semantik, 
Beweiskalküle, Korrektheit und Vollständigkeit logischer Systeme, 
Resolution, Unvollständigkeit in der Arithmetik. 
Das Modul besteht aus einer Vorlesung mit Übungen in kleinen 
Gruppen. Die in der Vorlesung besprochenen Inhalte werden im 
Übungsteil anhand von praktischen Anwendungen eingeübt. 
Qualifikationsziele Die Studierenden sollen die dargebotenen Konzepte und Methoden 
der diskreten Mathematik verstehen und anwenden können, 
soweit dies für die Informatik relevant ist. Sie sollen am Beispiel 
der Prädikatenlogik die Unterschiede zwischen Syntax und Semantik, 
sowie zwischen Wahrheit und Beweisbarkeit kennenlernen und 
verstehen. Sie sollen in die Lage versetzt werden, weiterführende 
logische Formalismen, die in der Informatik Anwendung finden, in 
vertiefenden Modulen zu verstehen, oder sich später im Selbststudium 
anzueignen. 
Modulverantwortliche/
r 
Ludwig-Maximilians-Universität 
Institut für Informatik 
Kerninformatik 
Martin Hofmann 
Unterrichtssprache(
n) 
Deutsch 

17 


8 
Modul 
WP 
5: 
Rechnernetze 
und 
verteilte 
Systeme 
(INF-RVS) 


Zuordnung zum Studiengang: Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Zugeordnete Modulteile: 
Lehrform Veranstaltung (Pflicht) Tur-Präsenzzeit Selbst-ECTS 
nus studium 

Vorlesung WP 5.1 Vorlesung zu Rechnernetze SS 30 h (2 SWS) 60 h (3) CP 
und verteilte Systeme 
Übung WP 5.2 Übungen zu Rechnernetze SS 30-45 h (2-3 45-60 h (3) CP 
und verteilte Systeme SWS) 

Im Modul müssen insgesamt 6 ECTS-Punkte erworben werden. Die Präsenzzeit beträgt 8 Wochenstunden.
 Inklusive Selbststudium sind etwa 180 Stunden aufzuwenden. 

Art des Moduls Wahlpflichtmodul mit Pflichtveranstaltungen 

Verwendbarkeit Studiengänge: 
Bachelorstudiengang Informatik (150 CP) 
Bachelorstudiengang Informatik plus Computerlinguistik (180 CP) 
Bachelorstudiengang Informatik plus Mathematik (180 CP) 
Bachelorstudiengang Informatik plus Statistik (180 CP) 
Bachelorstudiengang Medieninformatik (180 CP) 
Masterstudiengang Medizinische Informatik (120 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (30 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Auswahlregel: 
Aus den Wahlpflichtmodulen WP 5 -WP 7 sind zwei Wahlpflichtmodule
 zu wählen. 

Teilnahmevoraussetzungen
 
keine 
Zeitpunkt im 
dienverlauf 
Stu4.
 Semester (empfohlen) 
Dauer Das Modul erstreckt sich über ein Semester. 

Art der Bewertung Das Modul ist benotet. 

Form der Modul-Klausur: 90-180 min oder mündlich: 15-45 min 
prüfung Wiederholbarkeit: beliebig 
Zulassungsvoraussetzung: keine 

18 


Inhalte Das Modul vermittelt Einordnung, Aufbau und Funktion von Netzen 
mit dem Schwerpunkt Protokolle und gliedert die Kommunikationsgrundlage 
verteilter Systeme ein. Hierzu bedient es sich der 
gängigen geschichteten Modelle und Architekturen. Schichtunabhängige 
Konzepte und Verfahren werden gesondert behandelt, um 
dann anhand von Protokollbeispielen in allen wichtigen Modellschichten 
vertieft zu werden. Zu diesen gehören die Bitübertragungsschicht, 
die Sicherungsschicht samt Vielfachzugriff, die Vermittlungsschicht, 
die Transportschicht, ferner Dienstprotokolle im 
Internet. Die Darstellungs-und die Kommunikationssteuerungsschicht 
werden anhand von Konzepten aus der Kommunikationsmiddleware 
verteilter Systeme behandelt. Als Ausblick auf den 
Betrieb verteilter Systeme behandelt das Modul summarisch die 
Grundlagen des Internet-Management. 
Das Modul besteht aus einer Vorlesung mit Übungen in kleinen 
Gruppen. Die in der Vorlesung besprochenen Inhalte werden im 
Übungsteil anhand von praktischen Anwendungen eingeübt. 

Qualifikationsziele Das Modul zielt auf die Vermittlung des Folgenden: 

• 
Verständnis der Methoden und Techniken in Rechnernetzen 
und verteilten Systemen; 
• 
Fähigkeit der Einordnung und Bewertung neuer Protokolle; 
• 
Verständnis verteilter Anwendungen und deren Bezug zu den 
Eigenschaften des darunterliegenden Netzes. 
Modulverantwortliche/
r 
Ludwig-Maximilians-Universität 
Institut für Informatik 
Lehr-und Forschungseinheit für Kommunikationssysteme und Systemprogrammierung 
Dieter Kranzlmüller 

Unterrichts-Deutsch 
sprache(n) 

19 


9 
Modul 
WP 
6: 
Formale 
Sprachen 
und 
Komplexität 
(INF-FSK) 


Zuordnung zum Studiengang: Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Zugeordnete Modulteile: 
Lehrform Veranstaltung (Pflicht) Tur-Präsenzzeit Selbst-ECTS 
nus studium 

Vorlesung WP 6.1 Vorlesung zu Formale Spra-SS 45 h (3 SWS) 45 h (3) CP 
chen und Komplexität 
Übung WP 6.2 Übungen zu Formale Spra-SS 30 h (2 SWS) 60 h (3) CP 

chen und Komplexität 

Im Modul müssen insgesamt 6 ECTS-Punkte erworben werden. Die Präsenzzeit beträgt 5 Wochenstunden.
 Inklusive Selbststudium sind etwa 180 Stunden aufzuwenden. 

Art des Moduls Wahlpflichtmodul mit Pflichtveranstaltungen 

Verwendbarkeit Studiengänge: 
Bachelorstudiengang Informatik (150 CP) 
Bachelorstudiengang Informatik plus Computerlinguistik (180 CP) 
Bachelorstudiengang Informatik plus Mathematik (180 CP) 
Bachelorstudiengang Informatik plus Statistik (180 CP) 
Lehramt Gymnasium (72 CP) 
Lehramt Realschule (72 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (30 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Auswahlregel: 
Aus den Wahlpflichtmodulen WP 5 -WP 7 sind zwei Wahlpflichtmodule
 zu wählen. 

Teilnahmevoraussetzungen
 
keine 
Zeitpunkt im 
dienverlauf 
Stu4.
 Semester (empfohlen) 
Dauer Das Modul erstreckt sich über ein Semester. 

Art der Bewertung Das Modul ist benotet. 

Form der Modul-Klausur: 90-180 min oder mündlich: 15-45 min 
prüfung Wiederholbarkeit: beliebig 
Zulassungsvoraussetzung: keine 

20 


Inhalte Das Modul vermittelt Grundkenntnisse in den Gebieten Formale 
Sprachen, Berechenbarkeit und Komplexitätstheorie. 
Im einzelnen werden vermittelt: 
• 
Automatentheorie und Formale Sprachen: Chomsky-
Hierarchie, reguläre Sprachen und endliche Automaten, 
kontextfreie Sprachen und Kellerautomaten, kontextsensitive 
Sprachen, 
• 
Berechenbarkeit: Turingmaschinen und andere Berechnungsmodelle, 
Unentscheidbarkeit, rekursiv aufzählbare Probleme, 
• 
Komplexitätstheorie, insbesondere die Klassen P und NP, 
Definition und Beweise für NP Vollständigkeit. 
Das Modul besteht aus einer Vorlesung sowie Übungen in kleinen 
Gruppen. Die in der Vorlesung besprochenen Inhalte werden im 
Übungsteil anhand von praktischen Anwendungen eingeübt. 
Qualifikationsziele Die Studierenden sollen die oben genannten immer wiederkehrenden 
theoretischen Grundlagen der Informatik kennenlernen und in 
die Lage versetzt werden, sie auf praktische Fragestellungen anzuwenden. 
Beispiele sind, ein vorgelegtes Problem als NP-vollständig 
zu identifizieren, oder zustandsorientierte Spezifikationen als endliche 
Automaten zu erkennen und Methoden wie Determinisierung 
und Minimierung darauf anzuwenden. 
Modulverantwortliche/
r 
Ludwig-Maximilians-Universität 
Institut für Informatik 
Kerninformatik 
Martin Hofmann 
Unterrichtssprache(
n) 
Deutsch 

21 


10 
Modul 
WP 
8: 
Softwaretechnik 
(INF-ST) 


Zuordnung zum Studiengang: Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Zugeordnete Modulteile: 
Lehrform Veranstaltung (Pflicht) Tur-Präsenzzeit Selbst-ECTS 
nus studium 

Vorlesung WP 8.1 Vorlesung zu Softwaretech-WS 45 h (3 SWS) 45 h (3) CP 
nik 
Übung WP 8.2 Übungen zu Softwaretech-WS 30 h (2 SWS) 60 h (3) CP 

nik 

Im Modul müssen insgesamt 6 ECTS-Punkte erworben werden. Die Präsenzzeit beträgt 5 Wochenstunden.
 Inklusive Selbststudium sind etwa 180 Stunden aufzuwenden. 

Art des Moduls Wahlpflichtmodul mit Pflichtveranstaltungen 

Verwendbarkeit Studiengänge: 
Bachelorstudiengang Informatik (150 CP) 
Bachelorstudiengang Informatik plus Computerlinguistik (180 CP) 
Bachelorstudiengang Informatik plus Mathematik (180 CP) 
Bachelorstudiengang Informatik plus Statistik (180 CP) 
Bachelorstudiengang Medieninformatik (180 CP) 
Lehramt Gymnasium (72 CP) 
Lehramt Realschule (72 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (30 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Auswahlregel: 
Aus den Wahlpflichtmodulen WP 8 -WP 12 sind zwei Wahlpflichtmodule
 zu wählen. 

Teilnahmevoraussetzungen
 
keine 
Zeitpunkt im 
dienverlauf 
Stu5.
 Semester (empfohlen) 
Dauer Das Modul erstreckt sich über ein Semester. 

Art der Bewertung Das Modul ist benotet. 

Form der Modul-Klausur: 90-180 min oder mündlich: 15-45 min 
prüfung Wiederholbarkeit: beliebig 
Zulassungsvoraussetzung: keine 

22 


Inhalte In diesem Modul werden die wesentlichen Prinzipien der Softwaretechnik 
besprochen. Der gesamte Softwareentwicklungsprozess 
wird vorgestellt, beginnend mit der Anforderungsanalyse über den 
Systementwurf bis zu Implementierung und Test. Als grafische Modellierungssprache 
wird die Unified Modeling Language (UML) im 
gesamten Entwicklungsprozess eingesetzt; als Implementierungssprache 
wird Java verwendet. 
Die inhaltlichen Schwerpunkte des Moduls sind: 

• 
Softwareentwicklungsprozesse, 
• 
Anforderungsanalyse unter Verwendung von Anwendungsfällen, 
• 
Entwurf von statischen Systemstrukturen mit Klassendiagrammen, 
• 
Verhaltensmodellierung mit Zustands-, Sequenz-und Aktivitätsdiagrammen, 
• 
Architektur komplexer Softwaresysteme, 
• 
Design-und Architekturmuster, 
• 
Beziehung zwischen Modellen und Implementierungen in objektorientierten 
Sprachen, 
• 
Testen von Software. 
Der Modul besteht aus einer Vorlesung und Übungen in Gruppen. 
Die in der Vorlesung besprochenen Inhalte werden in den Übungen 
anhand von praktischen Anwendungsbeispielen eingeübt. 

Qualifikationsziele Die Studierenden erwerben ein allgemeines Verständnis der wichtigsten 
Aspekte moderner Softwareentwicklung unter Anwendung 
von Notationen und Werkzeugen gemäß des Stands der Forschung 
und der industriellen Praxis. 

Modulverantwortliche/
r 
Ludwig-Maximilians-Universität 
Institut für Informatik 
Lehr-und Forschungseinheit Programmierung and Softwaretechnik 
Rolf Hennicker 

Unterrichts-Deutsch Englisch 
sprache(n) 

23 


11 
Modul 
WP 
9: 
Betriebssysteme 
(INF-BS) 


Zuordnung zum Studiengang: Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Zugeordnete Modulteile: 
Lehrform Veranstaltung (Pflicht) Tur-Präsenzzeit Selbst-ECTS 
nus studium 

Vorlesung WP 9.1 Vorlesung zu Betriebssyste-WS 45 h (3 SWS) 45 h (3) CP 
men 
Übung WP 9.2 Übungen zu Betriebssyste-WS 30 h (2 SWS) 60 h (3) CP 
men 

Im Modul müssen insgesamt 6 ECTS-Punkte erworben werden. Die Präsenzzeit beträgt 5 Wochenstunden.
 Inklusive Selbststudium sind etwa 180 Stunden aufzuwenden. 

Art des Moduls Wahlpflichtmodul mit Pflichtveranstaltungen 

Verwendbarkeit Studiengänge: 
Bachelorstudiengang Informatik (150 CP) 
Bachelorstudiengang Informatik plus Computerlinguistik (180 CP) 
Bachelorstudiengang Informatik plus Mathematik (180 CP) 
Bachelorstudiengang Informatik plus Statistik (180 CP) 
Bachelorstudiengang Medieninformatik (180 CP) 
Lehramt Realschule (72 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (30 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Auswahlregel: 
Aus den Wahlpflichtmodulen WP 8 -WP 12 sind zwei Wahlpflichtmodule
 zu wählen. 

Teilnahmevoraussetzungen
 
keine 
Zeitpunkt im 
dienverlauf 
Stu5.
 Semester (empfohlen) 
Dauer Das Modul erstreckt sich über ein Semester. 

Art der Bewertung Das Modul ist benotet. 

Form der Modul-Klausur: 90-180 min oder mündlich: 15-45 min 
prüfung Wiederholbarkeit: beliebig 
Zulassungsvoraussetzung: keine 

24 


Inhalte Dieses Modul gibt eine Einführung in die relevanten Komponenten 
moderner Betriebssysteme. Dabei wird zunächst auf Methoden zur 
Prozessverwaltung und Prozesskontrolle, insbesondere von neben-
läufigen Prozessen, eingegangen. Insbesondere werden Methoden 
zur Erkennung und Vermeidung von Konflikten (Deadlocks und 
Race Conditions) bei Mehrfachzugriff auf gemeinsame Ressourcen 
behandelt. 
Im Einzelnen werden vermittelt: 
• 
die Entwicklungsgeschichte der Betriebssysteme, 
• 
Strategien zur Prozessverwaltung in Betriebssystemen, 
• 
die Unterstützung des Betriebssystems zur Parallelisierung 
von Programmen, 
• 
Strategien zur Ressourcenverwaltung und zur Koordinierung 
von Prozessen, 
• 
Techniken zur Speicherverwaltung sowie zur Kontrolle von 
Ein-und Ausgabekanälen, 
• 
lokale und verteilte Interprozesskommunikation. 
Das Modul besteht aus einer Vorlesung sowie Übungen in kleinen 
Gruppen. Die in der Vorlesung besprochenen Inhalte werden 
im Übungsteil anhand von praktischen Anwendungen eingeübt. 
Zusätzlich werden Aufgaben behandelt, welche die Anwendung 
der theoretischen Konzepte in höheren Programmiersprachen 
vertiefen. 
Qualifikationsziele Dieses Modul vermittelt den Studierenden die nötigen Grundkenntnisse 
zur gezielten Nutzung der speziellen Struktur und technischen 
Eigenschaften moderner Betriebssysteme. Somit wird eine 
wichtige Basis zur späteren Einarbeitung in die Entwicklung optimierter 
und skalierbarer Programme für moderne Betriebssysteme 
geschaffen. 
Modulverantwortliche/
r 
Ludwig-Maximilians-Universität 
Institut für Informatik 
Kerninformatik 
Claudia Linnhof-Popien 
Unterrichtssprache(
n) 
Deutsch 

25 


12 
Modul 
WP 
10: 
Datenbanksysteme 
I 
(INF-DBSI) 


Zuordnung zum Studiengang: Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Zugeordnete Modulteile: 
Lehrform Veranstaltung (Pflicht) Tur-Präsenzzeit Selbst-ECTS 
nus studium 

Vorlesung WP 10.1 Vorlesung zu Datenbank-WS 30 h (2 SWS) 60 h (3) CP 
systeme I 
Übung WP 10.2 Übungen zu Datenbank-WS 30-45 h (2-3 45-60 h (3) CP 
systeme I SWS) 

Im Modul müssen insgesamt 6 ECTS-Punkte erworben werden. Die Präsenzzeit beträgt 5 Wochenstunden.
 Inklusive Selbststudium sind etwa 180 Stunden aufzuwenden. 

Art des Moduls Wahlpflichtmodul mit Pflichtveranstaltungen 

Verwendbarkeit Studiengänge: 
Bachelorstudiengang Informatik (150 CP) 
Bachelorstudiengang Informatik plus Computerlinguistik (180 CP) 
Bachelorstudiengang Informatik plus Mathematik (180 CP) 
Bachelorstudiengang Informatik plus Statistik (180 CP) 
Bachelorstudiengang Medieninformatik (180 CP) 
Lehramt Gymnasium (72 CP) 
Lehramt Realschule (72 CP) 
Masterstudiengang Medizinische Informatik (120 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (30 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Auswahlregel: 
Aus den Wahlpflichtmodulen WP 8 -WP 12 sind zwei Wahlpflichtmodule
 zu wählen. 

Teilnahmevoraussetzungen
 
keine 
Zeitpunkt im 
dienverlauf 
Stu5.
 Semester (empfohlen) 
Dauer Das Modul erstreckt sich über ein Semester. 

Art der Bewertung Das Modul ist benotet. 

Form der Modul-Klausur: 90-180 min oder mündlich: 15-45 min 
prüfung Wiederholbarkeit: beliebig 
Zulassungsvoraussetzung: keine 

26 


Inhalte Die Vorlesung bietet eine Einführung in das Gebiet der Datenbanksysteme 
aus Anwendersicht. Im Mittelpunkt stehen die theoretischen 
Aspekte des relationalen Datenbankentwurfs anhand des 
relationalen Datenmodells, der relationalen Algebra und des Relationenkalküls. 
Es erfolgt eine ausführliche Behandlung der Anfragesprache 
SQL, die in den meisten relationalen Systemen implementiert 
ist. Des Weiteren werden Formalismen, Theorie und Algorithmen 
der relationalen Entwurfstheorie beschrieben und neuere 
Anwendungen im Bereich Datenbanken behandelt. 
Im einzelnen werden vermittelt: 
• 
Relationales und objektrelationales sowie weitere Datenmodelle, 
• 
Relationale Algebra, 
• 
Tupel-und Bereichskalkül, 
• 
SQL, 
• 
Datenbankentwurf nach dem E/R-Modell, 
• 
Normalformen, 
• 
Transaktionen 
Techniken, 
incl. Synchronisationsund 
Recovery• 
Physischer Datenbankentwurf (Indexstrukturen und Queryoptimierung), 
• 
Integration von Datenbankoperationen in Anwendungsprogramme. 
Das Modul besteht aus einer Vorlesung mit Übungen in kleinen 
Gruppen. Die in der Vorlesung besprochenen Inhalte werden im 
Übungsteil anhand von praktischen Anwendungen eingeübt. 
Qualifikationsziele Die Studierenden werden in die Lage versetzt, Datenbanksysteme 
als Anwender, als Anwendungsprogrammierer sowie als Systemdesigner 
professionell anzuwenden. Es wird die Kompetenz vermittelt, 
mittels komplexer Anfragen in umfangreichen Datenbanken 
zielgerichtet zu recherchieren, Datenbank-Schemata unter Vermeidung 
von Redundanzproblemen und unter Berücksichtigung 
von Effizienzaspekten systematisch zu entwerfen, und effiziente 
Datenbank-Anwendungen zu implementieren. 
Modulverantwortliche/
r 
Ludwig-Maximilians-Universität 
Institut für Informatik 
Lehr-und Forschungseinheit für Datenbanksysteme 
Christian Böhm 
Unterrichtssprache(
n) 
Deutsch 

27 


13 
Modul 
WP 
11: 
Web-Informationssysteme 
(INF-WebInfo) 


Zuordnung zum Studiengang: Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Zugeordnete Modulteile: 
Lehrform Veranstaltung (Pflicht) Tur-Präsenzzeit Selbst-ECTS 
nus studium 

Vorlesung WP 11.1 Vorlesung zu Web-WS 30 h (2 SWS) 60 h (3) CP 
Informationssysteme 
Übung WP 11.2 Übungen zu Web-WS 30-45 h (2-3 45-60 h (3) CP 
Informationssysteme SWS) 

Im Modul müssen insgesamt 6 ECTS-Punkte erworben werden. Die Präsenzzeit beträgt 5 Wochenstunden.
 Inklusive Selbststudium sind etwa 180 Stunden aufzuwenden. 

Art des Moduls Wahlpflichtmodul mit Pflichtveranstaltungen 

Verwendbarkeit Studiengänge: 
Bachelorstudiengang Informatik (150 CP) 
Bachelorstudiengang Informatik plus Computerlinguistik (180 CP) 
Bachelorstudiengang Informatik plus Mathematik (180 CP) 
Bachelorstudiengang Informatik plus Statistik (180 CP) 
Bachelorstudiengang Medieninformatik (180 CP) 
Lehramt Gymnasium (72 CP) 
Lehramt Realschule (72 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (30 CP) 
Nebenfach: Informatik für Bachelorstudiengänge (60 CP) 
Auswahlregel: 
Aus den Wahlpflichtmodulen WP 8 -WP 12 sind zwei Wahlpflichtmodule
 zu wählen. 

Teilnahmevoraussetzungen
 
keine 
Zeitpunkt im 
dienverlauf 
Stu5.
 Semester (empfohlen) 
Dauer Das Modul erstreckt sich über ein Semester. 

Art der Bewertung Das Modul ist benotet. 

Form der Modul-Klausur: 90-180 min oder mündlich: 15-45 min 
prüfung Wiederholbarkeit: beliebig 
Zulassungsvoraussetzung: keine 

28 


Inhalte Dieses Modul führt in die Thematiken der Web-basierten Informationssysteme 
ein. Unter anderem werden behandelt: 

• 
Unstrukturierte Daten oder das Dokumenten-Web: HTML 
und Grundlagen des Information Retrieval, Suchmaschine 
und Grundlagen der Netzwerkanalyse, Keyword-
Anfragesprachen, Datenstrukturen für das Web und Datenparallelismus. 
• 
Semistrukturierte Daten oder das Daten-Web: XML, Datenmodelle, 
Daten-Schemas, die Web-Anfragesprachen XPath 
und XQuery, Grundlagen der Auswertung von Web-Anfragen 
• 
Semantische Daten oder das Metadaten-Web: RDF/S, sozial-
semantische Web-Systeme, SPARQL. 
Qualifikationsziele Das Modul zielt auf die Vermittlung des Folgenden: 

• 
Angemessene Verwendung von grundlegenden Web-
Standards wie HTML, XML und RDF/S und Vorbereitung 
auf die zukünftige Entwicklung der eingeführten Web-
Standards. 
• 
Beherrschung von grundlegenden Web-Anwendungen wie 
Suchmaschinen, Semantic Web-Systeme und soziale Medien. 
• 
Verwendung von Web-Anfragesprachen. 
• 
Einführung in grundlegenden Techniken des Information Retrieval, 
der Datenspeicherung und des Datenparallelismus 
Modulverantwortliche/
r 
Ludwig-Maximilians-Universität 
Institut für Informatik 
Lehr-und Forschungseinheit für Programmier-und Modellierungssprachen 
François Bry 

Unterrichts-Deutsch 
sprache(n) 

29 


14 
Studienpläne 


Das Studium kann im Wintersemester und im Sommersemester begonnen werden. Für beide Anfangssemester
 werden Studienpläne vorgeschlagen. Die Pläne sind nur Vorschläge und nicht bindend.
 Jedem Studierenden steht es frei, sich einen anderen Studienplan im Rahmen der Studien-
und Prüfungsordnung zusammenzustellen. 

14.1 
Studienplan 
für 
Studienbeginn 
im 
Wintersemester 
1. 
Semester 
(WS) 
Kurzname Veranstaltung CP 
INF-EiP-NF Einführung in die Programmierung 12 

12 

2. 
Semester 
(SS) 
Kurzname Veranstaltung CP 
Wahlmöglichkeit: Es können 2 Module aus der folgenden Liste gewählt werden: 

INF-ProMo Programmierung und Modellierung 6 
INF-RA Rechnerarchitektur 6 
INF-AlDs Algorithmen und Datenstrukturen 6 
INF-LDS Logik und Diskrete Strukturen 6 

12 

3. 
Semester 
(WS) 
Kurzname Veranstaltung CP 
INF-SEP Softwareentwicklungspraktikum 12 

12 

4. 
Semester 
(SS) 
Kurzname Veranstaltung CP 
Wahlmöglichkeit: Es können 2 Module aus der folgenden Liste gewählt werden: 

INF-RVS Rechnernetze und verteilte Systeme 6 
INF-FSK Formale Sprachen und Komplexität 6 
1 Vertiefungsmodul 6 

12 

5. 
Semester 
(WS) 
Kurzname Veranstaltung CP 
Wahlmöglichkeit: Es können 2 Module aus der folgenden Liste gewählt werden: 

INF-ST Softwaretechnik 6 
INF-BS Betriebssysteme 6 
INF-DBSI Datenbanksysteme I 6 
INF-WebInfo Web-Informationssysteme 6 
1 Vertiefungsmodul 6 

12 

30 


14.2 
Studienplan 
für 
Studienbeginn 
im 
Sommersemester 
1. 
Semester 
(SS) 
Kurzname Veranstaltung CP 
Wahlmöglichkeit: Es können 2 Module aus der folgenden Liste gewählt werden: 
INF-ProMo Programmierung und Modellierung 6 
INF-RA Rechnerarchitektur 6 
INF-AlDs Algorithmen und Datenstrukturen 6 
INF-LDS Logik und Diskrete Strukturen 6 

12 
2. 
Semester 
(WS) 
12 
3. 
Semester 
(SS) 


Kurzname Veranstaltung CP 
INF-EiP-NF Einführung in die Programmierung 12 

Kurzname Veranstaltung CP 
Wahlmöglichkeit: Es können 2 Module aus der folgenden Liste gewählt werden: 
INF-ProMo Programmierung und Modellierung 6 
INF-RA Rechnerarchitektur 6 
INF-AlDs Algorithmen und Datenstrukturen 6 
INF-LDS Logik und Diskrete Strukturen 6 
INF-RVS Rechnernetze und verteilte Systeme 6 
INF-FSK Formale Sprachen und Komplexität 6 
1 Vertiefungsmodul 6 

12 
4. 
Semester 
(WS) 
12 
5. 
Semester 
(SS) 


Kurzname Veranstaltung CP 
INF-SEP Softwareentwicklungspraktikum 12 

Kurzname Veranstaltung CP 
Wahlmöglichkeit: Es können 2 Module aus der folgenden Liste gewählt werden: 
INF-RVS Rechnernetze und verteilte Systeme 6 
INF-FSK Formale Sprachen und Komplexität 6 
1 Vertiefungsmodul 6 

31 


